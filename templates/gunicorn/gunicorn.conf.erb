# gunicorn

description "gunicorn server"
author "Calen Pennington <cpennington@mitx.mit.edu>"

start on runlevel [2345]
stop on runlevel [!2345]

respawn
<% if scope.lookupvar('respawn_limit') != false -%>
respawn limit 3 30
<% end -%>

env PID=/var/run/gunicorn/<%= name %>.pid
env NEW_RELIC_CONFIG_FILE=<%= scope.lookupvar('base') %>/newrelic.ini
env NEWRELIC=<%= scope.lookupvar('virtualenv') %>/bin/newrelic-admin
<% if scope.lookupvar('workers') -%>
env WORKERS=<%= scope.lookupvar('workers') %>
<% else -%>
env WORKERS=<%= 4 * scope.lookupvar('::processorcount').to_i %>
<% end -%>
env PORT=<%= scope.lookupvar('port') %>
env LANG=en_US.UTF-8
env DJANGO_SETTINGS_MODULE=<%= scope.lookupvar('settings_module') %>

pre-start script
<% pre_start_commands.each do |cmd| -%>
    <%= cmd %>
<% end -%>
end script

chdir <%= scope.lookupvar('package_root') %>
setuid <%= scope.lookupvar('user') %>

<% case scope.lookupvar('app_interface') when 'django' -%>
exec <% if scope.lookupvar('reporting') == true -%>$NEWRELIC run-program <% end -%><%= scope.lookupvar('virtualenv') %>/bin/gunicorn_django -b 127.0.0.1:$PORT -w $WORKERS --timeout=<%= scope.lookupvar('timeout') %> --pythonpath=<%= scope.lookupvar('package_root') %> --settings=<%= scope.lookupvar('settings_module') %>
<% when 'wsgi' -%>
exec <% if scope.lookupvar('reporting') == true -%>$NEWRELIC run-program <% end -%><%= scope.lookupvar('virtualenv') %>/bin/gunicorn --preload -b 127.0.0.1:$PORT -w $WORKERS --timeout=<%= scope.lookupvar('timeout') %> --pythonpath=<%= scope.lookupvar('package_root') %> <%= scope.lookupvar('wsgi_app') %>
<% when 'python' -%>
  exec <%= scope.lookupvar('virtualenv') %>/python <%= scope.lookupvar('package_root') %>/<%= scope.lookupvar('script_name') %> >/dev/null 2>&1
<% end -%>
